@mixin test {
	border:1px solid red;
}

@mixin wh100 {
	width:100%;
	height:100%;
}

@mixin clfix {
	&:after {
		content: "";
		clear: both;
		display: block;
	}
}

@mixin center($width:100%, $mwidth:$width) {
	width:$width;
	max-width:$mwidth;
	margin: 0 auto;
}

@mixin rotate($deg, $a:center, $b:center){
    -webkit-transform: rotate(#{$deg}deg); /* Safari */
    -moz-transform: rotate(#{$deg}deg); /* Firefox */
    -ms-transform: rotate(#{$deg}deg); /* Internet Explorer and Microsoft Edge */
    -o-transform: rotate(#{$deg}deg);
	transform: rotate(#{$deg}deg); /* Standard syntax */
    transform-origin: $a $b;
}

@mixin box-sizing ($p: border-box){
    -webkit-box-sizing: $p; /* Safari/Chrome, other WebKit */
    -moz-box-sizing: $p;    /* Firefox, other Gecko */
        box-sizing: $p;         /* Opera/IE 8+ */
}

@mixin ani($speed:0.3s) {
	-moz-transition: all $speed ease;
	-o-transition: all $speed ease;
	-webkit-transition: all $speed ease;
	transition: all $speed ease;
}

@mixin ani-select($x...){
	moz-transition:$x;
	-o-transition:$x;
	-webkit-transition:$x;
	transition:$x;
}

@mixin aniAll($speed:0.3s) {
	-moz-transition: all $speed ease;
	-o-transition: all $speed ease;
	-webkit-transition: all $speed ease;
	transition: all $speed ease;
}

@mixin customani($id, $duration:1000ms, $loop:infinite ,$type:ease-in-out){
	-webkit-animation-name: $id;
	-webkit-animation-duration: $duration;
	-webkit-animation-iteration-count: $loop;
	-webkit-animation-timing-function: $type;
	-moz-animation-name: $id;
	-moz-animation-duration: $duration;
	-moz-animation-iteration-count: $loop;
	-moz-animation-timing-function: $type;
	-ms-animation-name: $id;
	-ms-animation-duration:$duration;
	-ms-animation-iteration-count: $loop;
	-ms-animation-timing-function: $type;
	animation-name: $id;
	animation-duration: $duration;
	animation-iteration-count: $loop;
	animation-timing-function: $type;
}

@mixin transform ($transforms) {
    -moz-transform: $transforms;
      -o-transform: $transforms;
     -ms-transform: $transforms;
 -webkit-transform: $transforms;
         transform: $transforms;
}

@mixin opacity ($opacity) {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity*100})";
    filter: alpha(opacity=#{$opacity*100});
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    opacity: $opacity;
}

@mixin box-shadow ($shadow) {
	-webkit-box-shadow: $shadow;
	-moz-box-shadow: $shadow;
	box-shadow: $shadow;
}

@mixin border-radius ($radius) {
	border-radius:$radius;
	-moz-border-radius:$radius;
	-webkit-border-radius:$radius;
	-khtml-border-radius:$radius;
}

@mixin isScreen($layout){
    $min: map-get($map: $layouts, $key: $layout);
    $max: map-get($map: $layouts-max, $key: $layout);
    @if($max){
        @media screen and (min-width: $min) and ( max-width: $max){
            @content;
        }
    } @else {
        @media screen and (min-width: $min){
            @content;
        }
    }
}

@mixin media($media-max) {
	@media only screen and (max-width: $media-max) { @content; }
}

/* Break Set */
$dpi:1600 1024 768;
@each $item in $dpi {
	.br#{$item} {
		display: block !important;
	}
	.view#{$item} {
		display: none !important;
	}
	@media only screen and (max-width: #{$item}px) {
		.br#{$item} { display: none !important; }
		.view#{$item} { display: block !important; }
	}
}